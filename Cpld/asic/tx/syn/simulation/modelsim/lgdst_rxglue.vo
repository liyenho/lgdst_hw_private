// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.0 Build 185 10/21/2015 SJ Standard Edition"

// DATE "02/14/2017 14:44:26"

// 
// Device: Altera 5M40ZM64C5 Package MBGA64
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module lgdst_rxglue (
	clk,
	reset,
	spi0_clk,
	spi0_cs,
	spi0_mosi,
	spi0_miso,
	ad_spi_sdio,
	ts_sync,
	ts_valid,
	ts_clk,
	ts_d0);
input 	clk;
input 	reset;
input 	spi0_clk;
input 	spi0_cs;
input 	spi0_mosi;
output 	spi0_miso;
inout 	ad_spi_sdio;
output 	ts_sync;
output 	ts_valid;
output 	ts_clk;
output 	ts_d0;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("lgdst_rxglue_v.sdo");
// synopsys translate_on

wire \ad_spi_sdio~0 ;
wire \spi0_mosi~combout ;
wire \spi0_cs~combout ;
wire \spi0_clk~combout ;
wire \~GND~combout ;
wire \spi0_ck_cnt[0]~1 ;
wire \spi0_ck_cnt[0]~1COUT1_9 ;
wire \spi0_ck_cnt[1]~3 ;
wire \spi0_ck_cnt[1]~3COUT1_10 ;
wire \spi0_ck_cnt[2]~5 ;
wire \spi0_ck_cnt[2]~5COUT1_11 ;
wire \WideOr0~combout ;
wire \spi_rw~0_combout ;
wire \spi_rw~1_combout ;
wire \spi_rw~regout ;
wire \ad_spi_rw~regout ;
wire \ad_spi_oe_b~regout ;
wire \ad_spi_sdio~2_combout ;
wire [3:0] spi0_ck_cnt;


// Location: PIN_F6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ad_spi_sdio~I (
	.datain(\spi0_mosi~combout ),
	.oe(\ad_spi_sdio~2_combout ),
	.combout(\ad_spi_sdio~0 ),
	.padio(ad_spi_sdio));
// synopsys translate_off
defparam \ad_spi_sdio~I .operation_mode = "bidir";
// synopsys translate_on

// Location: PIN_C8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \spi0_mosi~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\spi0_mosi~combout ),
	.padio(spi0_mosi));
// synopsys translate_off
defparam \spi0_mosi~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_C5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \spi0_cs~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\spi0_cs~combout ),
	.padio(spi0_cs));
// synopsys translate_off
defparam \spi0_cs~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_F8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \spi0_clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\spi0_clk~combout ),
	.padio(spi0_clk));
// synopsys translate_off
defparam \spi0_clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y4_N7
maxv_lcell \~GND (
// Equation(s):
// \~GND~combout  = GND

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\~GND~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \~GND .lut_mask = "0000";
defparam \~GND .operation_mode = "normal";
defparam \~GND .output_mode = "comb_only";
defparam \~GND .register_cascade_mode = "off";
defparam \~GND .sum_lutc_input = "datac";
defparam \~GND .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N0
maxv_lcell \spi0_ck_cnt[0] (
// Equation(s):
// spi0_ck_cnt[0] = DFFEAS(spi0_ck_cnt[0] $ ((\WideOr0~combout )), GLOBAL(\spi0_clk~combout ), VCC, , , \~GND~combout , GLOBAL(\spi0_cs~combout ), , )
// \spi0_ck_cnt[0]~1  = CARRY((spi0_ck_cnt[0] & (\WideOr0~combout )))
// \spi0_ck_cnt[0]~1COUT1_9  = CARRY((spi0_ck_cnt[0] & (\WideOr0~combout )))

	.clk(\spi0_clk~combout ),
	.dataa(spi0_ck_cnt[0]),
	.datab(\WideOr0~combout ),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(\spi0_cs~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(spi0_ck_cnt[0]),
	.cout(),
	.cout0(\spi0_ck_cnt[0]~1 ),
	.cout1(\spi0_ck_cnt[0]~1COUT1_9 ));
// synopsys translate_off
defparam \spi0_ck_cnt[0] .lut_mask = "6688";
defparam \spi0_ck_cnt[0] .operation_mode = "arithmetic";
defparam \spi0_ck_cnt[0] .output_mode = "reg_only";
defparam \spi0_ck_cnt[0] .register_cascade_mode = "off";
defparam \spi0_ck_cnt[0] .sum_lutc_input = "datac";
defparam \spi0_ck_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N1
maxv_lcell \spi0_ck_cnt[1] (
// Equation(s):
// spi0_ck_cnt[1] = DFFEAS(spi0_ck_cnt[1] $ (\WideOr0~combout  $ ((\spi0_ck_cnt[0]~1 ))), GLOBAL(\spi0_clk~combout ), VCC, , , \~GND~combout , GLOBAL(\spi0_cs~combout ), , )
// \spi0_ck_cnt[1]~3  = CARRY((spi0_ck_cnt[1] & (!\WideOr0~combout  & !\spi0_ck_cnt[0]~1 )) # (!spi0_ck_cnt[1] & ((!\spi0_ck_cnt[0]~1 ) # (!\WideOr0~combout ))))
// \spi0_ck_cnt[1]~3COUT1_10  = CARRY((spi0_ck_cnt[1] & (!\WideOr0~combout  & !\spi0_ck_cnt[0]~1COUT1_9 )) # (!spi0_ck_cnt[1] & ((!\spi0_ck_cnt[0]~1COUT1_9 ) # (!\WideOr0~combout ))))

	.clk(\spi0_clk~combout ),
	.dataa(spi0_ck_cnt[1]),
	.datab(\WideOr0~combout ),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(\spi0_cs~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\spi0_ck_cnt[0]~1 ),
	.cin1(\spi0_ck_cnt[0]~1COUT1_9 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(spi0_ck_cnt[1]),
	.cout(),
	.cout0(\spi0_ck_cnt[1]~3 ),
	.cout1(\spi0_ck_cnt[1]~3COUT1_10 ));
// synopsys translate_off
defparam \spi0_ck_cnt[1] .cin0_used = "true";
defparam \spi0_ck_cnt[1] .cin1_used = "true";
defparam \spi0_ck_cnt[1] .lut_mask = "9617";
defparam \spi0_ck_cnt[1] .operation_mode = "arithmetic";
defparam \spi0_ck_cnt[1] .output_mode = "reg_only";
defparam \spi0_ck_cnt[1] .register_cascade_mode = "off";
defparam \spi0_ck_cnt[1] .sum_lutc_input = "cin";
defparam \spi0_ck_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N2
maxv_lcell \spi0_ck_cnt[2] (
// Equation(s):
// spi0_ck_cnt[2] = DFFEAS(spi0_ck_cnt[2] $ (\WideOr0~combout  $ ((!\spi0_ck_cnt[1]~3 ))), GLOBAL(\spi0_clk~combout ), VCC, , , \~GND~combout , GLOBAL(\spi0_cs~combout ), , )
// \spi0_ck_cnt[2]~5  = CARRY((spi0_ck_cnt[2] & ((\WideOr0~combout ) # (!\spi0_ck_cnt[1]~3 ))) # (!spi0_ck_cnt[2] & (\WideOr0~combout  & !\spi0_ck_cnt[1]~3 )))
// \spi0_ck_cnt[2]~5COUT1_11  = CARRY((spi0_ck_cnt[2] & ((\WideOr0~combout ) # (!\spi0_ck_cnt[1]~3COUT1_10 ))) # (!spi0_ck_cnt[2] & (\WideOr0~combout  & !\spi0_ck_cnt[1]~3COUT1_10 )))

	.clk(\spi0_clk~combout ),
	.dataa(spi0_ck_cnt[2]),
	.datab(\WideOr0~combout ),
	.datac(\~GND~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(\spi0_cs~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\spi0_ck_cnt[1]~3 ),
	.cin1(\spi0_ck_cnt[1]~3COUT1_10 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(spi0_ck_cnt[2]),
	.cout(),
	.cout0(\spi0_ck_cnt[2]~5 ),
	.cout1(\spi0_ck_cnt[2]~5COUT1_11 ));
// synopsys translate_off
defparam \spi0_ck_cnt[2] .cin0_used = "true";
defparam \spi0_ck_cnt[2] .cin1_used = "true";
defparam \spi0_ck_cnt[2] .lut_mask = "698e";
defparam \spi0_ck_cnt[2] .operation_mode = "arithmetic";
defparam \spi0_ck_cnt[2] .output_mode = "reg_only";
defparam \spi0_ck_cnt[2] .register_cascade_mode = "off";
defparam \spi0_ck_cnt[2] .sum_lutc_input = "cin";
defparam \spi0_ck_cnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N3
maxv_lcell \spi0_ck_cnt[3] (
// Equation(s):
// spi0_ck_cnt[3] = DFFEAS(spi0_ck_cnt[3] $ (((\spi0_ck_cnt[2]~5  $ (\WideOr0~combout )))), GLOBAL(\spi0_clk~combout ), VCC, , , VCC, GLOBAL(\spi0_cs~combout ), , )

	.clk(\spi0_clk~combout ),
	.dataa(spi0_ck_cnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(\WideOr0~combout ),
	.aclr(gnd),
	.aload(\spi0_cs~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\spi0_ck_cnt[2]~5 ),
	.cin1(\spi0_ck_cnt[2]~5COUT1_11 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(spi0_ck_cnt[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi0_ck_cnt[3] .cin0_used = "true";
defparam \spi0_ck_cnt[3] .cin1_used = "true";
defparam \spi0_ck_cnt[3] .lut_mask = "a55a";
defparam \spi0_ck_cnt[3] .operation_mode = "normal";
defparam \spi0_ck_cnt[3] .output_mode = "reg_only";
defparam \spi0_ck_cnt[3] .register_cascade_mode = "off";
defparam \spi0_ck_cnt[3] .sum_lutc_input = "cin";
defparam \spi0_ck_cnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N9
maxv_lcell WideOr0(
// Equation(s):
// \WideOr0~combout  = (spi0_ck_cnt[3]) # ((spi0_ck_cnt[1]) # ((spi0_ck_cnt[0]) # (spi0_ck_cnt[2])))

	.clk(gnd),
	.dataa(spi0_ck_cnt[3]),
	.datab(spi0_ck_cnt[1]),
	.datac(spi0_ck_cnt[0]),
	.datad(spi0_ck_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WideOr0~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam WideOr0.lut_mask = "fffe";
defparam WideOr0.operation_mode = "normal";
defparam WideOr0.output_mode = "comb_only";
defparam WideOr0.register_cascade_mode = "off";
defparam WideOr0.sum_lutc_input = "datac";
defparam WideOr0.synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N6
maxv_lcell \spi_rw~0 (
// Equation(s):
// \spi_rw~0_combout  = ((!spi0_ck_cnt[2] & ((!spi0_ck_cnt[1]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(spi0_ck_cnt[2]),
	.datac(vcc),
	.datad(spi0_ck_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\spi_rw~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_rw~0 .lut_mask = "0033";
defparam \spi_rw~0 .operation_mode = "normal";
defparam \spi_rw~0 .output_mode = "comb_only";
defparam \spi_rw~0 .register_cascade_mode = "off";
defparam \spi_rw~0 .sum_lutc_input = "datac";
defparam \spi_rw~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N4
maxv_lcell \spi_rw~1 (
// Equation(s):
// \spi_rw~1_combout  = ((!spi0_ck_cnt[2] & (!spi0_ck_cnt[0] & !spi0_ck_cnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(spi0_ck_cnt[2]),
	.datac(spi0_ck_cnt[0]),
	.datad(spi0_ck_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\spi_rw~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_rw~1 .lut_mask = "0003";
defparam \spi_rw~1 .operation_mode = "normal";
defparam \spi_rw~1 .output_mode = "comb_only";
defparam \spi_rw~1 .register_cascade_mode = "off";
defparam \spi_rw~1 .sum_lutc_input = "datac";
defparam \spi_rw~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N8
maxv_lcell spi_rw(
// Equation(s):
// \spi_rw~regout  = DFFEAS((spi0_ck_cnt[3] & ((\spi_rw~1_combout  & (\spi0_mosi~combout )) # (!\spi_rw~1_combout  & ((\spi_rw~regout ))))) # (!spi0_ck_cnt[3] & (((\spi_rw~regout )))), GLOBAL(\spi0_clk~combout ), !GLOBAL(\spi0_cs~combout ), , , , , , )

	.clk(\spi0_clk~combout ),
	.dataa(spi0_ck_cnt[3]),
	.datab(\spi0_mosi~combout ),
	.datac(\spi_rw~1_combout ),
	.datad(\spi_rw~regout ),
	.aclr(\spi0_cs~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\spi_rw~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam spi_rw.lut_mask = "df80";
defparam spi_rw.operation_mode = "normal";
defparam spi_rw.output_mode = "reg_only";
defparam spi_rw.register_cascade_mode = "off";
defparam spi_rw.sum_lutc_input = "datac";
defparam spi_rw.synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y4_N5
maxv_lcell ad_spi_rw(
// Equation(s):
// \ad_spi_rw~regout  = DFFEAS((spi0_ck_cnt[0] & ((\spi_rw~0_combout  & ((\spi_rw~regout ))) # (!\spi_rw~0_combout  & (\ad_spi_rw~regout )))) # (!spi0_ck_cnt[0] & (\ad_spi_rw~regout )), GLOBAL(\spi0_clk~combout ), !GLOBAL(\spi0_cs~combout ), , , , , , )

	.clk(\spi0_clk~combout ),
	.dataa(\ad_spi_rw~regout ),
	.datab(spi0_ck_cnt[0]),
	.datac(\spi_rw~0_combout ),
	.datad(\spi_rw~regout ),
	.aclr(\spi0_cs~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ad_spi_rw~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam ad_spi_rw.lut_mask = "ea2a";
defparam ad_spi_rw.operation_mode = "normal";
defparam ad_spi_rw.output_mode = "reg_only";
defparam ad_spi_rw.register_cascade_mode = "off";
defparam ad_spi_rw.sum_lutc_input = "datac";
defparam ad_spi_rw.synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxv_lcell ad_spi_oe_b(
// Equation(s):
// \ad_spi_oe_b~regout  = DFFEAS((((!\ad_spi_rw~regout ))), !GLOBAL(\spi0_clk~combout ), VCC, , , VCC, GLOBAL(\spi0_cs~combout ), , )

	.clk(!\spi0_clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\ad_spi_rw~regout ),
	.aclr(gnd),
	.aload(\spi0_cs~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\ad_spi_oe_b~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam ad_spi_oe_b.lut_mask = "00ff";
defparam ad_spi_oe_b.operation_mode = "normal";
defparam ad_spi_oe_b.output_mode = "reg_only";
defparam ad_spi_oe_b.register_cascade_mode = "off";
defparam ad_spi_oe_b.sum_lutc_input = "datac";
defparam ad_spi_oe_b.synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxv_lcell \ad_spi_sdio~2 (
// Equation(s):
// \ad_spi_sdio~2_combout  = (((!\spi0_cs~combout  & \ad_spi_oe_b~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\spi0_cs~combout ),
	.datad(\ad_spi_oe_b~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ad_spi_sdio~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ad_spi_sdio~2 .lut_mask = "0f00";
defparam \ad_spi_sdio~2 .operation_mode = "normal";
defparam \ad_spi_sdio~2 .output_mode = "comb_only";
defparam \ad_spi_sdio~2 .register_cascade_mode = "off";
defparam \ad_spi_sdio~2 .sum_lutc_input = "datac";
defparam \ad_spi_sdio~2 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_D8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_H7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_C6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \spi0_miso~I (
	.datain(\ad_spi_sdio~0 ),
	.oe(vcc),
	.combout(),
	.padio(spi0_miso));
// synopsys translate_off
defparam \spi0_miso~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_D2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ts_sync~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ts_sync));
// synopsys translate_off
defparam \ts_sync~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_F1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ts_valid~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ts_valid));
// synopsys translate_off
defparam \ts_valid~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_F5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ts_clk~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ts_clk));
// synopsys translate_off
defparam \ts_clk~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_F3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ts_d0~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ts_d0));
// synopsys translate_off
defparam \ts_d0~I .operation_mode = "output";
// synopsys translate_on

endmodule
